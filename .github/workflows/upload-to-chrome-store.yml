name: Upload to Chrome Web Store

on:
  # Manual trigger
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to upload (e.g., 1.0.5). Leave empty to use latest release.'
        required: false
        type: string

  # Auto-trigger when a release is published
  release:
    types: [published]

jobs:
  upload:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Determine version
        id: version
        run: |
          if [ -n "${{ github.event.inputs.version }}" ]; then
            VERSION="${{ github.event.inputs.version }}"
            echo "Using manually specified version: $VERSION"
          elif [ "${{ github.event_name }}" = "release" ]; then
            VERSION="${{ github.event.release.tag_name }}"
            VERSION="${VERSION#v}"  # Remove 'v' prefix if present
            echo "Using release version: $VERSION"
          else
            # Get latest release version
            VERSION=$(gh release list --limit 1 --json tagName --jq '.[0].tagName' | sed 's/^v//')
            echo "Using latest release version: $VERSION"
          fi
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "ðŸ“¦ Version to upload: $VERSION"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check if artifact exists
        id: check_artifact
        run: |
          VERSION="${{ steps.version.outputs.VERSION }}"
          if gh release view "v${VERSION}" >/dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "âœ“ Release v${VERSION} exists"
          else
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "âœ— Release v${VERSION} not found"
            exit 1
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Download release artifact
        run: |
          VERSION="${{ steps.version.outputs.VERSION }}"
          ARTIFACT="thoth-extension-v${VERSION}.zip"

          echo "Downloading $ARTIFACT from release v${VERSION}..."
          gh release download "v${VERSION}" --pattern "$ARTIFACT"

          if [ -f "$ARTIFACT" ]; then
            echo "âœ“ Downloaded $ARTIFACT"
            ls -lh "$ARTIFACT"
          else
            echo "âœ— Failed to download $ARTIFACT"
            exit 1
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload to Chrome Web Store
        uses: mobilefirstllc/cws-publish@latest
        with:
          action: 'upload'  # Options: 'upload' (manual publish), 'publish' (auto-publish), 'testers'
          client_id: ${{ secrets.CHROME_CLIENT_ID }}
          client_secret: ${{ secrets.CHROME_CLIENT_SECRET }}
          refresh_token: ${{ secrets.CHROME_REFRESH_TOKEN }}
          extension_id: ${{ secrets.CHROME_EXTENSION_ID }}
          zip_file: thoth-extension-v${{ steps.version.outputs.VERSION }}.zip

      - name: Upload complete
        run: |
          VERSION="${{ steps.version.outputs.VERSION }}"
          echo "âœ“ Extension v${VERSION} uploaded to Chrome Web Store!"
          echo "ðŸ“‹ Next step: Go to Chrome Web Store Developer Dashboard to publish"
          echo "ðŸ”— https://chrome.google.com/webstore/devconsole"
