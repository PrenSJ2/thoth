name: Release Extension

on:
  push:
    branches:
      - main

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    permissions:
      contents: write  # Required to create releases and tags

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for tags

      - name: Extract version from manifest
        id: version
        run: |
          VERSION=$(grep -o '"version"[^"]*"[^"]*"' manifest.json | grep -o '[0-9.]*')
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "Manifest version: $VERSION"

      - name: Check if version tag already exists
        id: check_tag
        run: |
          if git rev-parse "v${{ steps.version.outputs.VERSION }}" >/dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "‚ö†Ô∏è Tag v${{ steps.version.outputs.VERSION }} already exists, skipping release"
          else
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "‚úì Tag v${{ steps.version.outputs.VERSION }} does not exist, will create release"
          fi

      - name: Stop if tag exists
        if: steps.check_tag.outputs.exists == 'true'
        run: |
          echo "Release for v${{ steps.version.outputs.VERSION }} already exists."
          echo "To create a new release, bump the version in manifest.json"
          exit 0

      - name: Package extension
        if: steps.check_tag.outputs.exists == 'false'
        run: |
          # Create dist directory
          mkdir -p dist

          # Package the extension
          zip -q "dist/thoth-extension-v${{ steps.version.outputs.VERSION }}.zip" \
            manifest.json \
            background.js \
            content.js \
            popup.html \
            popup.js \
            icon.png \
            README.md \
            CHANGELOG.md

          # Show package info
          echo "Package created:"
          ls -lh dist/

      - name: Generate changelog
        if: steps.check_tag.outputs.exists == 'false'
        id: changelog
        run: |
          # Get commits since last tag
          if git describe --tags --abbrev=0 2>/dev/null; then
            PREV_TAG=$(git describe --tags --abbrev=0)
            echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
            git log ${PREV_TAG}..HEAD --pretty=format:"- %s (%h)" >> $GITHUB_OUTPUT
            echo "" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            echo "CHANGELOG=Initial release" >> $GITHUB_OUTPUT
          fi

      - name: Create git tag
        if: steps.check_tag.outputs.exists == 'false'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a "v${{ steps.version.outputs.VERSION }}" -m "Release v${{ steps.version.outputs.VERSION }}"
          git push origin "v${{ steps.version.outputs.VERSION }}"

      - name: Create GitHub Release
        if: steps.check_tag.outputs.exists == 'false'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.version.outputs.VERSION }}
          name: Thoth v${{ steps.version.outputs.VERSION }}
          body: |
            ## üìú Thoth Chrome Extension v${{ steps.version.outputs.VERSION }}

            **The AI scribe that records what matters.**

            ### üì• Installation

            1. Download `thoth-extension-v${{ steps.version.outputs.VERSION }}.zip` below
            2. Extract the zip file
            3. Open Chrome and go to `chrome://extensions/`
            4. Enable "Developer mode"
            5. Click "Load unpacked" and select the extracted folder
            6. Configure your API keys in the extension popup

            ### üìã Prerequisites

            - OpenAI API Key ([Get one here](https://platform.openai.com/api-keys))
            - GitHub Personal Access Token with `repo` and `read:org` scopes ([Generate here](https://github.com/settings/tokens/new?description=Thoth%20Chrome%20Extension&scopes=repo,read:org))

            ### üìù Changes

            ${{ steps.changelog.outputs.CHANGELOG }}

            ---

            **Full documentation:** [README.md](https://github.com/${{ github.repository }}/blob/main/README.md)
          files: |
            dist/thoth-extension-v${{ steps.version.outputs.VERSION }}.zip
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Release complete
        if: steps.check_tag.outputs.exists == 'false'
        run: |
          echo "‚úì Release v${{ steps.version.outputs.VERSION }} published successfully!"
          echo "View it at: https://github.com/${{ github.repository }}/releases/tag/v${{ steps.version.outputs.VERSION }}"
